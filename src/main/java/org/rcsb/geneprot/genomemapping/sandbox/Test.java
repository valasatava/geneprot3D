package org.rcsb.geneprot.genomemapping.sandbox;

import org.apache.spark.api.java.JavaPairRDD;
import org.apache.spark.sql.Dataset;
import org.apache.spark.sql.Row;
import org.biojava.nbio.core.exceptions.CompoundNotFoundException;
import org.biojava.nbio.core.sequence.DNASequence;
import org.biojava.nbio.core.sequence.ProteinSequence;
import org.biojava.nbio.core.sequence.compound.NucleotideCompound;
import org.biojava.nbio.core.sequence.template.SequenceView;
import org.biojava.nbio.genome.parsers.genename.GeneChromosomePosition;
import org.biojava.nbio.genome.util.ChromosomeMappingTools;
import org.biojava.nbio.genome.util.ProteinMappingTools;
import org.rcsb.geneprot.common.io.DataLocationProvider;
import org.rcsb.geneprot.common.utils.CommonConstants;
import org.rcsb.geneprot.genomemapping.GenomicsCoordinatesMapper;
import org.rcsb.geneprot.genomemapping.functions.BuildAlternativeTranscripts;
import org.rcsb.geneprot.genomemapping.utils.MapperUtils;
import scala.Tuple2;

import static org.apache.spark.sql.functions.col;

/**
 * Created by Yana Valasatava on 10/27/17.
 */
public class Test {

    public static void main(String[] args) throws CompoundNotFoundException {

        System.out.println((new Tuple2<>(1, 2)).hashCode());
        System.out.println((new Tuple2<>(1, 2)).hashCode());

        //foo();
    }

    public static void boo() {
        Dataset<Row> transcripts = GenomicsCoordinatesMapper.getTranscriptsAnnotation(DataLocationProvider.getHumanGenomeAnnotationResourceFromUCSC());
        transcripts = MapperUtils.mapTranscriptsToUniProtAccession(transcripts);

        transcripts = transcripts.filter(col(CommonConstants.COL_GENE_NAME).equalTo("INIP").and(col(CommonConstants.COL_NCBI_RNA_SEQUENCE_ACCESSION).equalTo("NM_001329588")));

        JavaPairRDD<Row, GeneChromosomePosition> rdd = transcripts.toJavaRDD()
                .mapToPair(new BuildAlternativeTranscripts());

        GeneChromosomePosition gcp = rdd.collect().get(0)._2;

        int transcriptLength = ChromosomeMappingTools.getCDSLength(gcp);

        System.out.println(transcriptLength);
    }

    public static void foo() throws CompoundNotFoundException {

        String dna = "ATGGCCCGCTTCGGAGACGAGATGCCGGCCCGCTACGGGGGAGGAGGCTCCGGGGCAGCCGCCGGGGTGG" +
                "TCGTGGGCAGCGGAGGCGGGCGAGGAGCCGGGGGCAGCCGGCAGGGCGGGCAGCCCGGGGCGCAAAGGAT" +
                "GTACAAGCAGTCAATGGCGCAGAGAGCGCGGACCATGGCACTCTACAACCCCATCCCCGTCCGACAGAAC" +
                "TGCCTCACGGTTAACCGGTCTCTCTTCCTCTTCAGCGAAGACAACGTGGTGAGAAAATACGCCAAAAAGA" +
                "TCACCGAATGGCCTCCCTTTGAATATATGATTTTAGCCACCATCATAGCGAATTGCATCGTCCTCGCACT" +
                "GGAGCAGCATCTGCCTGATGATGACAAGACCCCGATGTCTGAACGGCTGGATGACACAGAACCATACTTC" +
                "ATTGGAATTTTTTGTTTCGAGGCTGGAATTAAAATCATTGCCCTTGGGTTTGCCTTCCACAAAGGCTCCT" +
                "ACTTGAGGAATGGCTGGAATGTCATGGACTTTGTGGTGGTGCTAACGGGCATCTTGGCGACAGTTGGGAC" +
                "GGAGTTTGACCTACGGACGCTGAGGGCAGTTCGAGTGCTGCGGCCGCTCAAGCTGGTGTCTGGAATCCCA" +
                "AGTTTACAAGTCGTCCTGAAGTCGATCATGAAGGCGATGATCCCTTTGCTGCAGATCGGCCTCCTCCTAT" +
                "TTTTTGCAATCCTTATTTTTGCAATCATAGGGTTAGAATTTTATATGGGAAAATTTCATACCACCTGCTT" +
                "TGAAGAGGGGACAGATGACATTCAGGGTGAGTCTCCGGCTCCATGTGGGACAGAAGAGCCCGCCCGCACC" +
                "TGCCCCAATGGGACCAAATGTCAGCCCTACTGGGAAGGGCCCAACAACGGGATCACTCAGTTCGACAACA" +
                "TCCTGTTTGCAGTGCTGACTGTTTTCCAGTGCATAACCATGGAAGGGTGGACTGATCTCCTCTACAATAG" +
                "CAACGATGCCTCAGGGAACACTTGGAACTGGTTGTACTTCATCCCCCTCATCATCATCGGCTCCTTTTTT" +
                "ATGCTGAACCTTGTGCTGGGTGTGCTGTCAGGGGAGTTTGCCAAAGAAAGGGAACGGGTGGAGAACCGGC" +
                "GGGCTTTTCTGAAGCTGAGGCGGCAACAACAGATTGAACGTGAGCTCAATGGGTACATGGAGTGGATCTC" +
                "AAAAGCAGAAGAGGTGATCCTCGCCGAGGATGAAACTGACGGGGAGCAGAGGCATCCCTTTGATGGAGCT" +
                "CTGCGGAGAACCACCATAAAGAAAAGCAAGACAGATTTGCTCAACCCCGAAGAGGCTGAGGATCAGCTGG" +
                "CTGATATAGCCTCTGTGGGTTCTCCCTTCGCCCGAGCCAGCATTAAAAGTGCCAAGCTGGAGAACTCGAC" +
                "CTTTTTTCACAAAAAGGAGAGGAGGATGCGTTTCTACATCCGCCGCATGGTCAAAACTCAGGCCTTCTAC" +
                "TGGACTGTACTCAGTTTGGTAGCTCTCAACACGCTGTGTGTTGCTATTGTTCACTACAACCAGCCCGAGT" +
                "GGCTCTCCGACTTCCTTTACTATGCAGAATTCATTTTCTTAGGACTCTTTATGTCCGAAATGTTTATAAA" +
                "AATGTACGGGCTTGGGACGCGGCCTTACTTCCACTCTTCCTTCAACTGCTTTGACTGTGGGGTTATCATT" +
                "GGGAGCATCTTCGAGGTCATCTGGGCTGTCATAAAACCTGGCACATCCTTTGGAATCAGCGTGTTACGAG" +
                "CCCTCAGGTTATTGCGTATTTTCAAAGTCACAAAGTACTGGGCATCTCTCAGAAACCTGGTCGTCTCTCT" +
                "CCTCAACTCCATGAAGTCCATCATCAGCCTGTTGTTTCTCCTTTTCCTGTTCATTGTCGTCTTCGCCCTT" +
                "TTGGGAATGCAACTCTTCGGCGGCCAGTTTAATTTCGATGAAGGGACTCCTCCCACCAACTTCGATACTT" +
                "TTCCAGCAGCAATAATGACGGTGTTTCAGATCCTGACGGGCGAAGACTGGAACGAGGTCATGTACGACGG" +
                "GATCAAGTCTCAGGGGGGCGTGCAGGGCGGCATGGTGTTCTCCATCTATTTCATTGTACTGACGCTCTTT" +
                "GGGAACTACACCCTCCTGAATGTGTTCTTGGCCATCGCTGTGGACAATCTGGCCAACGCCCAGGAGCTCA" +
                "CCAAGGTGGAGGCGGACGAGCAAGAGGAAGAAGAAGCAGCGAACCAGAAACTTGCCCTACAGAAAGCCAA" +
                "GGAGGTGGCAGAAGTGAGTCCTCTGTCCGCGGCCAACATGTCTATAGCTGTGAAAGAGCAACAGAAGAAT" +
                "CAAAAGCCAGCCAAGTCCGTGTGGGAGCAGCGGACCAGTGAGATGCGAAAGCAGAACTTGCTGGCCAGCC" +
                "GGGAGGCCCTGTATAACGAAATGGACCCGGACGAGCGCTGGAAGGCTGCCTACACGCGGCACCTGCGGCC" +
                "AGACATGAAGACGCACTTGGACCGGCCGCTGGTGGTGGACCCGCAGGAGAACCGCAACAACAACACCAAC" +
                "AAGAGCCGGGCGGCCGAGCCCACCGTGGACCAGCGCCTCGGCCAGCAGCGCGCCGAGGACTTCCTCAGGA" +
                "AACAGGCCCGCTACCACGATCGGGCCCGGGACCCCAGCGGCTCGGCGGGCCTGGACGCACGGAGGCCCTG" +
                "GGCGGGAAGCCAGGAGGCCGAGCTGAGCCGGGAGGGACCCTACGGCCGCGAGTCGGACCACCACGCCCGG" +
                "GAGGGCAGCCTGGAGCAACCCGGGTTCTGGGAGGGCGAGGCCGAGCGAGGCAAGGCCGGGGACCCCCACC" +
                "GGAGGCACGTGCACCGGCAGGGGGGCAGCAGGGAGAGCCGCAGCGGGTCCCCGCGCACGGGCGCGGACGG" +
                "GGAGCATCGACGTCATCGCGCGCACCGCAGGCCCGGGGAGGAGGGTCCGGAGGACAAGGCGGAGCGGAGG" +
                "GCGCGGCACCGCGAGGGCAGCCGGCCGGCCCGGGGCGGCGAGGGCGAGGGCGAGGGCCCCGACGGGGGCG" +
                "AGCGCAGGAGAAGGCACCGGCATGGCGCTCCAGCCACGTACGAGGGGGACGCGCGGAGGGAGGACAAGGA" +
                "GCGGAGGCATCGGAGGAGGAAAGAGAACCAGGGCTCCGGGGTCCCTGTGTCGGGCCCCAACCTGTCAACC" +
                "ACCCGGCCAATCCAGCAGGACCTGGGCCGCCAAGACCCACCCCTGGCAGAGGATATTGACAACATGAAGA" +
                "ACAACAAGCTGGCCACCGCGGAGTCGGCCGCTCCCCACGGCAGCCTTGGCCACGCCGGCCTGCCCCAGAG" +
                "CCCAGCCAAGATGGGAAACAGCACCGACCCCGGCCCCATGCTGGCCATCCCTGCCATGGCCACCAACCCC" +
                "CAGAACGCCGCCAGCCGCCGGACGCCCAACAACCCGGGGAACCCATCCAATCCCGGCCCCCCCAAGACCC" +
                "CCGAGAATAGCCTTATCGTCACCAACCCCAGCGGCACCCAGACCAATTCAGCTAAGACTGCCAGGAAACC" +
                "CGACCACACCACAGTGGACATCCCCCCAGCCTGCCCACCCCCCCTCAACCACACCGTCGTACAAGTGAAC" +
                "AAAAACGCCAACCCAGACCCACTGCCAAAAAAAGAGGAAGAGAAGAAGGAGGAGGAGGAAGACGACCGTG" +
                "GGGAAGACGGCCCTAAGCCAATGCCTCCCTATAGCTCCATGTTCATCCTGTCCACGACCAACCCCCTTCG" +
                "CCGCCTGTGCCATTACATCCTGAACCTGCGCTACTTTGAGATGTGCATCCTCATGGTCATTGCCATGAGC" +
                "AGCATCGCCCTGGCCGCCGAGGACCCTGTGCAGCCCAACGCACCTCGGAACAACGTGCTGCGATACTTTG" +
                "ACTACGTTTTTACAGGCGTCTTTACCTTTGAGATGGTGATCAAGATGATTGACCTGGGGCTCGTCCTGCA" +
                "TCAGGGTGCCTACTTCCGTGACCTCTGGAATATTCTCGACTTCATAGTGGTCAGTGGGGCCCTGGTAGCC" +
                "TTTGCCTTCACTGGCAATAGCAAAGGAAAAGACATCAACACGATTAAATCCCTCCGAGTCCTCCGGGTGC" +
                "TACGACCTCTTAAAACCATCAAGCGGCTGCCAAAGCTCAAGGCTGTGTTTGACTGTGTGGTGAACTCACT" +
                "TAAAAACGTCTTCAACATCCTCATCGTCTACATGCTATTCATGTTCATCTTCGCCGTGGTGGCTGTGCAG" +
                "CTCTTCAAGGGGAAATTCTTCCACTGCACTGACGAGTCCAAAGAGTTTGAGAAAGATTGTCGAGGCAAAT" +
                "ACCTCCTCTACGAGAAGAATGAGGTGAAGGCGCGAGACCGGGAGTGGAAGAAGTATGAATTCCATTACGA" +
                "CAATGTGCTGTGGGCTCTGCTGACCCTCTTCACCGTGTCCACGGGAGAAGGCTGGCCACAGGTCCTCAAG" +
                "CATTCGGTGGACGCCACCTTTGAGAACCAGGGCCCCAGCCCCGGGTACCGCATGGAGATGTCCATTTTCT" +
                "ACGTCGTCTACTTTGTGGTGTTCCCCTTCTTCTTTGTCAATATCTTTGTGGCCTTGATCATCATCACCTT" +
                "CCAGGAGCAAGGGGACAAGATGATGGAGGAATACAGCCTGGAGAAAAATGAGAGGGCCTGCATTGATTTC" +
                "GCCATCAGCGCCAAGCCGCTGACCCGACACATGCCGCAGAACAAGCAGAGCTTCCAGTACCGCATGTGGC" +
                "AGTTCGTGGTGTCTCCGCCTTTCGAGTACACGATCATGGCCATGATCGCCCTCAACACCATCGTGCTTAT" +
                "GATGAAGTTCTATGGGGCTTCTGTTGCTTATGAAAATGCCCTGCGGGTGTTCAACATCGTCTTCACCTCC" +
                "CTCTTCTCTCTGGAATGTGTGCTGAAAGTCATGGCTTTTGGGATTCTGAATTATTTCCGCGATGCCTGGA" +
                "ACATCTTCGACTTTGTGACTGTTCTGGGCAGCATCACCGATATCCTCGTGACTGAGTTTGGGAATCCGAA" +
                "TAACTTCATCAACCTGAGCTTTCTCCGCCTCTTCCGAGCTGCCCGGCTCATCAAACTTCTCCGTCAGGGT" +
                "TACACCATCCGCATTCTTCTCTGGACCTTTGTGCAGTCCTTCAAGGCCCTGCCTTATGTCTGTCTGCTGA" +
                "TCGCCATGCTCTTCTTCATCTATGCCATCATTGGGATGCAGGTGTTTGGTAACATTGGCATCGACGTGGA" +
                "GGACGAGGACAGTGATGAAGATGAGTTCCAAATCACTGAGCACAATAACTTCCGGACCTTCTTCCAGGCC" +
                "CTCATGCTTCTCTTCCGGAGTGCCACCGGGGAAGCTTGGCACAACATCATGCTTTCCTGCCTCAGCGGGA" +
                "AACCGTGTGATAAGAACTCTGGCATCCTGACTCGAGAGTGTGGCAATGAATTTGCTTATTTTTACTTTGT" +
                "TTCCTTCATCTTCCTCTGCTCGTTTCTGATGCTGAATCTCTTTGTCGCCGTCATCATGGACAACTTTGAG" +
                "TACCTCACCCGAGACTCCTCCATCCTGGGCCCCCACCACCTGGATGAGTACGTGCGTGTCTGGGCCGAGT" +
                "ATGACCCCGCAGCTTGGGGCCGCATGCCTTACCTGGACATGTATCAGATGCTGAGACACATGTCTCCGCC" +
                "CCTGGGTCTGGGGAAGAAGTGTCCGGCCAGAGTGGCTTACAAGCGGCTTCTGCGGATGGACCTGCCCGTC" +
                "GCAGATGACAACACCGTCCACTTCAATTCCACCCTCATGGCTCTGATCCGCACAGCCCTGGACATCAAGA" +
                "TTGCCAAGGGAGGAGCCGACAAACAGCAGATGGACGCTGAGCTGCGGAAGGAGATGATGGCGATTTGGCC" +
                "CAATCTGTCCCAGAAGACGCTAGACCTGCTGGTCACACCTCACAAGTCCACGGACCTCACCGTGGGGAAG" +
                "ATCTACGCAGCCATGATGATCATGGAGTACTACCGGCAGAGCAAGGCCAAGAAGCTGCAGGCCATGCGCG" +
                "AGGAGCAGGACCGGACACCCCTCATGTTCCAGCGCATGGAGCCCCCGTCCCCAACGCAGGAAGGGGGACC" +
                "TGGCCAGAACGCCCTCCCCTCCACCCAGCTGGACCCAGGAGGAGCCCTGATGGCTCACGAAAGCGGCCTC" +
                "AAGGAGAGCCCGTCCTGGGTGACCCAGCGTGCCCAGGAGATGTTCCAGAAGACGGGCACATGGAGTCCGG" +
                "AACAAGGCCCCCCTACCGACATGCCCAACAGCCAGCCTAACTCTCAGTCCGTGGAGATGCGAGAGATGGG" +
                "CAGAGATGGCTACTCCGACAGCGAGCACTACCTCCCCATGGAAGGCCAGGGCCGGGCTGCCTCCATGCCC" +
                "CGCCTCCCTGCAGAGAACCAGAGGAGAAGGGGCCGGCCACGTGGGAATAACCTCAGTACCATCTCAGACA" +
                "CCAGCCCCATGAAGCGTTCAGCCTCCGTGCTGGGCCCCAAGGCCCGACGCCTGGACGATTACTCGCTGGA" +
                "GCGGGTCCCGCCCGAGGAGAACCAGCGGCACCACCAGCGGCGCCGCGACCGCAGCCACCGCGCCTCTGAG" +
                "CGCTCCCTGGGCCGCTACACCGATGTGGACACAGGCTTGGGGACAGACCTGAGCATGACCACCCAATCCG" +
                "GGGACCTGCCGTCGAAGGAGCGGGACCAGGAGCGGGGCCGGCCCAAGGATCGGAAGCATCGACAGCACCA" +
                "CCACCACCACCACCACCACCACCATCCCCCGCCCCCCGACAAGGACCGCTATGCCCAGGAACGGCCGGAC" +
                "CACGGCCGGGCACGGGCTCGGGACCAGCGCTGGTCCCGCTCGCCCAGCGAGGGCCGAGAGCACATGGCGC" +
                "ACCGGCAGTAG";

        String prot = "MARFGDEMPARYGGGGSGAAAGVVVGSGGGRGAGGSRQGGQPGAQRMYKQSMAQRARTMALYNPIPVRQN" +
                "CLTVNRSLFLFSEDNVVRKYAKKITEWPPFEYMILATIIANCIVLALEQHLPDDDKTPMSERLDDTEPYF" +
                "IGIFCFEAGIKIIALGFAFHKGSYLRNGWNVMDFVVVLTGILATVGTEFDLRTLRAVRVLRPLKLVSGIP" +
                "SLQVVLKSIMKAMIPLLQIGLLLFFAILIFAIIGLEFYMGKFHTTCFEEGTDDIQGESPAPCGTEEPART" +
                "CPNGTKCQPYWEGPNNGITQFDNILFAVLTVFQCITMEGWTDLLYNSNDASGNTWNWLYFIPLIIIGSFF" +
                "MLNLVLGVLSGEFAKERERVENRRAFLKLRRQQQIERELNGYMEWISKAEEVILAEDETDGEQRHPFDGA" +
                "LRRTTIKKSKTDLLNPEEAEDQLADIASVGSPFARASIKSAKLENSTFFHKKERRMRFYIRRMVKTQAFY" +
                "WTVLSLVALNTLCVAIVHYNQPEWLSDFLYYAEFIFLGLFMSEMFIKMYGLGTRPYFHSSFNCFDCGVII" +
                "GSIFEVIWAVIKPGTSFGISVLRALRLLRIFKVTKYWASLRNLVVSLLNSMKSIISLLFLLFLFIVVFAL" +
                "LGMQLFGGQFNFDEGTPPTNFDTFPAAIMTVFQILTGEDWNEVMYDGIKSQGGVQGGMVFSIYFIVLTLF" +
                "GNYTLLNVFLAIAVDNLANAQELTKVEADEQEEEEAANQKLALQKAKEVAEVSPLSAANMSIAVKEQQKN" +
                "QKPAKSVWEQRTSEMRKQNLLASREALYNEMDPDERWKAAYTRHLRPDMKTHLDRPLVVDPQENRNNNTN" +
                "KSRAAEPTVDQRLGQQRAEDFLRKQARYHDRARDPSGSAGLDARRPWAGSQEAELSREGPYGRESDHHAR" +
                "EGSLEQPGFWEGEAERGKAGDPHRRHVHRQGGSRESRSGSPRTGADGEHRRHRAHRRPGEEGPEDKAERR" +
                "ARHREGSRPARGGEGEGEGPDGGERRRRHRHGAPATYEGDARREDKERRHRRRKENQGSGVPVSGPNLST" +
                "TRPIQQDLGRQDPPLAEDIDNMKNNKLATAESAAPHGSLGHAGLPQSPAKMGNSTDPGPMLAIPAMATNP" +
                "QNAASRRTPNNPGNPSNPGPPKTPENSLIVTNPSGTQTNSAKTARKPDHTTVDIPPACPPPLNHTVVQVN" +
                "KNANPDPLPKKEEEKKEEEEDDRGEDGPKPMPPYSSMFILSTTNPLRRLCHYILNLRYFEMCILMVIAMS" +
                "SIALAAEDPVQPNAPRNNVLRYFDYVFTGVFTFEMVIKMIDLGLVLHQGAYFRDLWNILDFIVVSGALVA" +
                "FAFTGNSKGKDINTIKSLRVLRVLRPLKTIKRLPKLKAVFDCVVNSLKNVFNILIVYMLFMFIFAVVAVQ" +
                "LFKGKFFHCTDESKEFEKDCRGKYLLYEKNEVKARDREWKKYEFHYDNVLWALLTLFTVSTGEGWPQVLK" +
                "HSVDATFENQGPSPGYRMEMSIFYVVYFVVFPFFFVNIFVALIIITFQEQGDKMMEEYSLEKNERACIDF" +
                "AISAKPLTRHMPQNKQSFQYRMWQFVVSPPFEYTIMAMIALNTIVLMMKFYGASVAYENALRVFNIVFTS" +
                "LFSLECVLKVMAFGILNYFRDAWNIFDFVTVLGSITDILVTEFGNPNNFINLSFLRLFRAARLIKLLRQG" +
                "YTIRILLWTFVQSFKALPYVCLLIAMLFFIYAIIGMQVFGNIGIDVEDEDSDEDEFQITEHNNFRTFFQA" +
                "LMLLFRSATGEAWHNIMLSCLSGKPCDKNSGILTRECGNEFAYFYFVSFIFLCSFLMLNLFVAVIMDNFE" +
                "YLTRDSSILGPHHLDEYVRVWAEYDPAAWGRMPYLDMYQMLRHMSPPLGLGKKCPARVAYKRLLRMDLPV" +
                "ADDNTVHFNSTLMALIRTALDIKIAKGGADKQQMDAELRKEMMAIWPNLSQKTLDLLVTPHKSTDLTVGK" +
                "IYAAMMIMEYYRQSKAKKLQAMREEQDRTPLMFQRMEPPSPTQEGGPGQNALPSTQLDPGGALMAHESGL" +
                "KESPSWVTQRAQEMFQKTGTWSPEQGPPTDMPNSQPNSQSVEMREMGRDGYSDSEHYLPMEGQGRAASMP" +
                "RLPAENQRRRGRPRGNNLSTISDTSPMKRSASVLGPKARRLDDYSLERVPPEENQRHHQRRRDRSHRASE" +
                "RSLGRYTDVDTGLGTDLSMTTQSGDLPSKERDQERGRPKDRKHRQHHHHHHHHHHPPPPDKDRYAQERPD" +
                "HGRARARDQRWSRSPSEGREHMAHRQ";

        String transcriptSequence = (new StringBuilder(dna)).reverse().toString();
        DNASequence dnaObj = new DNASequence(transcriptSequence);
        SequenceView<NucleotideCompound> compliment = dnaObj.getComplement();
        transcriptSequence = compliment.getSequenceAsString();

        ProteinSequence sequence = ProteinMappingTools.convertDNAtoProteinSequence(dna);
        String protein = sequence.getSequenceAsString();

        if (prot.equals(protein))
            System.out.println("OK");
    }
}
